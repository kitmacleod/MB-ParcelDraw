{"id":"index.html","dependencies":[],"generated":{"html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <title></title>\r\n    <meta name=\"viewport\" content=\"initial-scale=1,maximum-scale=1,user-scalable=no\">\r\n    <script src=\"https://api.tiles.mapbox.com/mapbox-gl-js/v0.38.0/mapbox-gl.js\"></script>\r\n    <script src=\"https://npmcdn.com/@turf/turf/turf.min.js\"></script>\r\n    <link href=\"https://api.tiles.mapbox.com/mapbox-gl-js/v0.38.0/mapbox-gl.css\" rel=\"stylesheet\">\r\n\r\n    <script src=\"https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-draw/v0.18.0/mapbox-gl-draw.js\"></script>\r\n    <link rel=\"stylesheet\" href=\"https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-draw/v0.18.0/mapbox-gl-draw.css\" type=\"text/css\">\r\n    <style>\r\n        body { margin:0; padding:0; }\r\n        #map { position:absolute; top:0; bottom:0; width:100%; }\r\n    </style>\r\n</head>\r\n<body>\r\n\r\n<style>\r\n.boxdraw {\r\n    background: rgba(56,135,190,0.1);\r\n    border: 2px solid #3887be;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 0;\r\n    height: 0;\r\n}\r\n</style>\r\n\r\n<div id=\"map\"></div>\r\n\r\n<script>\r\nmapboxgl.accessToken = 'pk.eyJ1IjoiY2hhcmxpZWRvdGF1IiwiYSI6ImNpazlpdzh0ZTA5d3Z2Y200emhqbml1OGEifQ.uoA6t5rO18m0BgNGPXsm5A';\r\nvar map = new mapboxgl.Map({\r\n    container: 'map',\r\n    style: 'mapbox://styles/mapbox/streets-v9',\r\n    center: [-98, 38.88],\r\n    minZoom: 2,\r\n    zoom: 3\r\n});\r\nvar draw = new MapboxDraw({\r\n    displayControlsDefault: false,\r\n    controls: {\r\n        polygon: true,\r\n        trash: true\r\n    }\r\n});\r\nmap.addControl(draw);\r\n// Disable default box zooming.\r\nmap.boxZoom.disable();\r\n// Create a popup, but don't add it to the map yet.\r\nvar popup = new mapboxgl.Popup({\r\n    closeButton: false\r\n});\r\nmap.on('load', function() {\r\n   \r\n    // Add the source to query. In this example we're using\r\n    // county polygons uploaded as vector tiles\r\n    map.addSource('counties', {\r\n        \"type\": \"vector\",\r\n        \"url\": \"mapbox://mapbox.82pkq93d\"\r\n    });\r\n    map.addLayer({\r\n        \"id\": \"counties\",\r\n        \"type\": \"fill\",\r\n        \"source\": \"counties\",\r\n        \"source-layer\": \"original\",\r\n        \"paint\": {\r\n            \"fill-outline-color\": \"rgba(0,0,0,0.1)\",\r\n            \"fill-color\": \"rgba(0,0,0,0.1)\"\r\n        }\r\n    }, 'place-city-sm'); // Place polygon under these labels.\r\n    map.addLayer({\r\n        \"id\": \"counties-highlighted\",\r\n        \"type\": \"fill\",\r\n        \"source\": \"counties\",\r\n        \"source-layer\": \"original\",\r\n        \"paint\": {\r\n            \"fill-outline-color\": \"#484896\",\r\n            \"fill-color\": \"#6e599f\",\r\n            \"fill-opacity\": 0.75\r\n        },\r\n        \"filter\": [\"in\", \"FIPS\", \"\"]\r\n    }, 'place-city-sm'); // Place polygon under these labels.\r\n    map.on('draw.create', function(e){\r\n    \r\n        var userPolygon = e.features[0];\r\n        // generate bounding box from polygon the user drew\r\n        var polygonBoundingBox = turf.bbox(userPolygon);\r\n      \r\n        var southWest = [polygonBoundingBox[0], polygonBoundingBox[1]];\r\n        var northEast = [polygonBoundingBox[2], polygonBoundingBox[3]];\r\n        var northEastPointPixel = map.project(northEast);\r\n        var southWestPointPixel = map.project(southWest);\r\n        var features = map.queryRenderedFeatures([southWestPointPixel, northEastPointPixel], { layers: ['counties'] });\r\n        var filter = features.reduce(function(memo, feature) {\r\n            if (! (undefined === turf.intersect(feature, userPolygon))) {\r\n                // only add the property, if the feature intersects with the polygon drawn by the user\r\n              memo.push(feature.properties.FIPS);\r\n            } \r\n                return memo;\r\n        }, ['in', 'FIPS']);\r\n        map.setFilter(\"counties-highlighted\", filter);\r\n    }); \r\n});\r\n</script>\r\n\r\n</body>\r\n</html>\r\n\r\n\r\n   \r\n\r\n"},"hash":"59d87a174537128ecf10ee0898a614db","cacheData":{}}